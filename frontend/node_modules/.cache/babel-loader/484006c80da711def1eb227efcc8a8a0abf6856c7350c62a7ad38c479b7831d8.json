{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\samplerfinal\\\\frontend\\\\src\\\\components\\\\SongDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FaRegHeart, FaHeart } from 'react-icons/fa';\nimport { FaHeartCircleCheck } from 'react-icons/fa6';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arrayBufferToBase64 = buffer => {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n};\nconst shuffleArray = (() => {\n  let lastShuffleTime = 0;\n  let shuffledArray = [];\n  return array => {\n    const currentTime = Date.now();\n    const twentyFourHours = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\n\n    // Check if 24 hours have passed since the last shuffle\n    if (currentTime - lastShuffleTime >= twentyFourHours || !shuffledArray.length) {\n      // Shuffle the array\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      // Update the last shuffle time and shuffled array\n      lastShuffleTime = currentTime;\n      shuffledArray = [...array];\n    }\n    return shuffledArray;\n  };\n})();\nconst SongDisplay = ({\n  onSongSelect,\n  selectedSong,\n  currentPage,\n  songsPerPage,\n  displayAll\n}) => {\n  _s();\n  const [allSongs, setAllSongs] = useState([]);\n  const [hoveredSongId, setHoveredSongId] = useState(null);\n  const [favoriteStatus, setFavoriteStatus] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n  const [currentSongImage, setCurrentSongImage] = useState(null);\n  const [currentSongTitle, setCurrentSongTitle] = useState('');\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await axios.get('http://localhost:8081/audio_tracks');\n        console.log('API Response:', response.data); // Log the API response\n\n        const songsWithBase64Images = response.data.map(song => {\n          if (song.cover_art && song.cover_art.data) {\n            const base64String = arrayBufferToBase64(song.cover_art.data);\n            console.log('Base64 String for song:', song.name, base64String); // Log the base64 string\n            return {\n              ...song,\n              cover_art: `data:image/jpeg;base64,${base64String}`\n            };\n          } else {\n            console.error('Invalid cover data for song:', song);\n            return {\n              ...song,\n              cover_art: ''\n            }; // Handle missing cover data\n          }\n        });\n        setAllSongs(shuffleArray(songsWithBase64Images));\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchFavoriteSongs = async () => {\n      try {\n        const response = await axios.get('http://localhost:8081/favorite_songs');\n        const favoriteSongs = response.data.reduce((acc, song) => {\n          acc[song.id] = true;\n          return acc;\n        }, {});\n        setFavoriteStatus(favoriteSongs);\n      } catch (error) {\n        console.error('Error fetching favorite songs:', error);\n      }\n    };\n    fetchSongs();\n    fetchFavoriteSongs();\n  }, []);\n  useEffect(() => {\n    if (selectedSong) {\n      setCurrentSongImage(selectedSong.cover_art);\n      setCurrentSongTitle(selectedSong.name);\n    } else {\n      setCurrentSongImage(null);\n      setCurrentSongTitle('');\n    }\n  }, [selectedSong]);\n  const startIndex = (currentPage - 1) * songsPerPage;\n  let songsToDisplay = displayAll ? allSongs : allSongs.filter(song => favoriteStatus[song.id]);\n  // const currentSongs = songsToDisplay.slice(startIndex, startIndex + songsPerPage);\n\n  const handleFavorite = async songId => {\n    try {\n      // If the song is already favorited, unfavorite it\n      if (favoriteStatus[songId]) {\n        await axios.post('http://localhost:8081/unfavorite', {\n          songId\n        });\n        setFavoriteStatus(prevStatus => ({\n          ...prevStatus,\n          [songId]: false // Set the favorite status to false\n        }));\n      } else {\n        // Otherwise, favorite the song\n        await axios.post('http://localhost:8081/favorite', {\n          songId\n        });\n        setFavoriteStatus(prevStatus => ({\n          ...prevStatus,\n          [songId]: true // Set the favorite status to true\n        }));\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        setErrorMessage('You must be logged in to favourite songs');\n        setTimeout(() => {\n          setErrorMessage(''); // Clear error message after 1 second\n        }, 2000);\n      } else {\n        console.error('Error favoriting/unfavoriting song:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1\n    },\n    children: [currentSongImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '400px',\n        left: '185px',\n        transform: 'translateX(-50%)',\n        backgroundColor: 'white',\n        padding: '10px',\n        borderRadius: '10px',\n        paddingBottom: '50px',\n        width: '330px',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentSongImage,\n        alt: currentSongTitle,\n        style: {\n          width: '330px',\n          height: '330px',\n          borderRadius: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center',\n          paddingTop: '20px',\n          color: 'black',\n          fontSize: '22px',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap'\n        },\n        children: currentSongTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        marginLeft: selectedSong ? '370px' : '0',\n        transition: 'margin-left 1.5s'\n      },\n      children: songsToDisplay.slice(startIndex, startIndex + songsPerPage).map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '150px',\n          margin: '10px',\n          cursor: 'pointer'\n        },\n        onClick: () => onSongSelect(song),\n        children: [song.cover_art ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.cover_art,\n          alt: song.name,\n          style: {\n            width: '150px',\n            height: '150px',\n            objectFit: 'cover',\n            borderRadius: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '150px',\n            height: '150px',\n            backgroundColor: 'black',\n            color: 'white',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: '10px'\n          },\n          children: \"No Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '16px',\n            textAlign: 'center',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            marginTop: '5px',\n            border: '0px solid #ddd',\n            padding: '5px',\n            borderRadius: '5px',\n            color: 'white'\n          },\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            e.stopPropagation();\n            handleFavorite(song.id);\n          },\n          onMouseEnter: () => setHoveredSongId(song.id),\n          onMouseLeave: () => setHoveredSongId(null),\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            cursor: 'pointer'\n          },\n          children: favoriteStatus[song.id] ? /*#__PURE__*/_jsxDEV(FaHeartCircleCheck, {\n            className: \"w-20 h-8\",\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }, this) : hoveredSongId === song.id ? /*#__PURE__*/_jsxDEV(FaHeart, {\n            className: \"w-20 h-8\",\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(FaRegHeart, {\n            className: \"w-20 h-8\",\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '30px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        backgroundColor: 'red',\n        color: 'white',\n        padding: '10px 20px',\n        borderRadius: '5px',\n        zIndex: 1000\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n_s(SongDisplay, \"wpJrwR7O766RO6ozFpoa33R2zvQ=\");\n_c = SongDisplay;\nexport default SongDisplay;\nvar _c;\n$RefreshReg$(_c, \"SongDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","FaRegHeart","FaHeart","FaHeartCircleCheck","jsxDEV","_jsxDEV","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","shuffleArray","lastShuffleTime","shuffledArray","array","currentTime","Date","now","twentyFourHours","length","j","Math","floor","random","SongDisplay","onSongSelect","selectedSong","currentPage","songsPerPage","displayAll","_s","allSongs","setAllSongs","hoveredSongId","setHoveredSongId","favoriteStatus","setFavoriteStatus","errorMessage","setErrorMessage","currentSongImage","setCurrentSongImage","currentSongTitle","setCurrentSongTitle","fetchSongs","response","get","console","log","data","songsWithBase64Images","map","song","cover_art","base64String","name","error","fetchFavoriteSongs","favoriteSongs","reduce","acc","id","startIndex","songsToDisplay","filter","handleFavorite","songId","post","prevStatus","status","setTimeout","style","display","flexDirection","flexGrow","children","position","top","left","transform","backgroundColor","padding","borderRadius","paddingBottom","width","overflow","src","alt","height","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","paddingTop","color","fontSize","textOverflow","whiteSpace","flexWrap","justifyContent","marginLeft","transition","slice","margin","cursor","onClick","objectFit","alignItems","marginTop","border","e","stopPropagation","onMouseEnter","onMouseLeave","className","zIndex","_c","$RefreshReg$"],"sources":["D:/Desktop/samplerfinal/frontend/src/components/SongDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FaRegHeart, FaHeart } from 'react-icons/fa';\r\nimport { FaHeartCircleCheck } from 'react-icons/fa6';\r\n\r\nconst arrayBufferToBase64 = (buffer) => {\r\n    let binary = '';\r\n    const bytes = new Uint8Array(buffer);\r\n    const len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n        binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n};\r\n\r\nconst shuffleArray = (() => {\r\n    let lastShuffleTime = 0;\r\n    let shuffledArray = [];\r\n\r\n    return (array) => {\r\n        const currentTime = Date.now();\r\n        const twentyFourHours = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\r\n\r\n        // Check if 24 hours have passed since the last shuffle\r\n        if (currentTime - lastShuffleTime >= twentyFourHours || !shuffledArray.length) {\r\n            // Shuffle the array\r\n            for (let i = array.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [array[i], array[j]] = [array[j], array[i]];\r\n            }\r\n            // Update the last shuffle time and shuffled array\r\n            lastShuffleTime = currentTime;\r\n            shuffledArray = [...array];\r\n        }\r\n\r\n        return shuffledArray;\r\n    };\r\n})();\r\n\r\nconst SongDisplay = ({ onSongSelect, selectedSong, currentPage, songsPerPage, displayAll }) => {\r\n    const [allSongs, setAllSongs] = useState([]);\r\n    const [hoveredSongId, setHoveredSongId] = useState(null);\r\n    const [favoriteStatus, setFavoriteStatus] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [currentSongImage, setCurrentSongImage] = useState(null);\r\n    const [currentSongTitle, setCurrentSongTitle] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchSongs = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8081/audio_tracks');\r\n                console.log('API Response:', response.data); // Log the API response\r\n\r\n                const songsWithBase64Images = response.data.map((song) => {\r\n                    if (song.cover_art && song.cover_art.data) {\r\n                        const base64String = arrayBufferToBase64(song.cover_art.data);\r\n                        console.log('Base64 String for song:', song.name, base64String); // Log the base64 string\r\n                        return { ...song, cover_art: `data:image/jpeg;base64,${base64String}` };\r\n                    } else {\r\n                        console.error('Invalid cover data for song:', song);\r\n                        return { ...song, cover_art: '' }; // Handle missing cover data\r\n                    }\r\n                });\r\n                setAllSongs(shuffleArray(songsWithBase64Images));\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        const fetchFavoriteSongs = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8081/favorite_songs');\r\n                const favoriteSongs = response.data.reduce((acc, song) => {\r\n                    acc[song.id] = true;\r\n                    return acc;\r\n                }, {});\r\n                setFavoriteStatus(favoriteSongs);\r\n            } catch (error) {\r\n                console.error('Error fetching favorite songs:', error);\r\n            }\r\n        };\r\n\r\n        fetchSongs();\r\n        fetchFavoriteSongs();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedSong) {\r\n            setCurrentSongImage(selectedSong.cover_art);\r\n            setCurrentSongTitle(selectedSong.name);\r\n        } else {\r\n            setCurrentSongImage(null);\r\n            setCurrentSongTitle('');\r\n        }\r\n    }, [selectedSong]);\r\n\r\n    const startIndex = (currentPage - 1) * songsPerPage;\r\n    let songsToDisplay = displayAll ? allSongs : allSongs.filter(song => favoriteStatus[song.id]);\r\n    // const currentSongs = songsToDisplay.slice(startIndex, startIndex + songsPerPage);\r\n\r\n    const handleFavorite = async (songId) => {\r\n        try {\r\n            // If the song is already favorited, unfavorite it\r\n            if (favoriteStatus[songId]) {\r\n                await axios.post('http://localhost:8081/unfavorite', { songId });\r\n                setFavoriteStatus((prevStatus) => ({\r\n                    ...prevStatus,\r\n                    [songId]: false, // Set the favorite status to false\r\n                }));\r\n            } else {\r\n                // Otherwise, favorite the song\r\n                await axios.post('http://localhost:8081/favorite', { songId });\r\n                setFavoriteStatus((prevStatus) => ({\r\n                    ...prevStatus,\r\n                    [songId]: true, // Set the favorite status to true\r\n                }));\r\n            }\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 401) {\r\n                setErrorMessage('You must be logged in to favourite songs');\r\n                setTimeout(() => {\r\n                    setErrorMessage(''); // Clear error message after 1 second\r\n                }, 2000);\r\n            } else {\r\n                console.error('Error favoriting/unfavoriting song:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\r\n        {currentSongImage && (\r\n            <div style={{ position: 'fixed', top: '400px', left: '185px', transform: 'translateX(-50%)', backgroundColor: 'white', padding: '10px', borderRadius: '10px', paddingBottom: '50px', width: '330px', overflow: 'hidden' }}>\r\n                <img src={currentSongImage} alt={currentSongTitle} style={{ width: '330px', height: '330px', borderRadius: '10px',}} />\r\n                <h3 style={{ textAlign: 'center', paddingTop: '20px', color: 'black', fontSize: '22px', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{currentSongTitle}</h3>\r\n            </div>\r\n        )}\r\n            <div style={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'center',\r\n                marginLeft: selectedSong ? '370px' : '0',\r\n                transition: 'margin-left 1.5s'\r\n            }}>\r\n                {songsToDisplay.slice(startIndex, startIndex + songsPerPage).map((song) => (\r\n                    <div\r\n                        key={song.id}\r\n                        style={{ width: '150px', margin: '10px', cursor: 'pointer' }}\r\n                        onClick={() => onSongSelect(song)}\r\n                    >\r\n                        {song.cover_art ? (\r\n                            <img src={song.cover_art} alt={song.name} style={{\r\n                                width: '150px',\r\n                                height: '150px',\r\n                                objectFit: 'cover',\r\n                                borderRadius: '10px'\r\n                            }} />\r\n                        ) : (\r\n                            <div style={{\r\n                                width: '150px',\r\n                                height: '150px',\r\n                                backgroundColor: 'black',\r\n                                color: 'white',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                borderRadius: '10px'\r\n                            }}>\r\n                                No Image\r\n                            </div>\r\n                        )}\r\n                        <h2 style={{\r\n                            fontSize: '16px',\r\n                            textAlign: 'center',\r\n                            whiteSpace: 'nowrap',\r\n                            overflow: 'hidden',\r\n                            textOverflow: 'ellipsis',\r\n                            marginTop: '5px',\r\n                            border: '0px solid #ddd',\r\n                            padding: '5px',\r\n                            borderRadius: '5px',\r\n                            color: 'white'\r\n                        }}>\r\n                            {song.name}\r\n                        </h2>\r\n                        <div\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleFavorite(song.id);\r\n                            }}\r\n                            onMouseEnter={() => setHoveredSongId(song.id)}\r\n                            onMouseLeave={() => setHoveredSongId(null)}\r\n                            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}\r\n                        >\r\n                            {favoriteStatus[song.id] ? (\r\n                                <FaHeartCircleCheck className='w-20 h-8' color='white' />\r\n                            ) : hoveredSongId === song.id ? (\r\n                                <FaHeart className='w-20 h-8' color='white' />\r\n                            ) : (\r\n                                <FaRegHeart className='w-20 h-8' color='white' />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {errorMessage && (\r\n                <div style={{\r\n                    position: 'fixed',\r\n                    top: '30px',\r\n                    left: '50%',\r\n                    transform: 'translateX(-50%)',\r\n                    backgroundColor: 'red',\r\n                    color: 'white',\r\n                    padding: '10px 20px',\r\n                    borderRadius: '5px',\r\n                    zIndex: 1000\r\n                }}>\r\n                    {errorMessage}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SongDisplay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,OAAO,QAAQ,gBAAgB;AACpD,SAASC,kBAAkB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,mBAAmB,GAAIC,MAAM,IAAK;EACpC,IAAIC,MAAM,GAAG,EAAE;EACf,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAACH,MAAM,CAAC;EACpC,MAAMI,GAAG,GAAGF,KAAK,CAACG,UAAU;EAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;IAC1BL,MAAM,IAAIM,MAAM,CAACC,YAAY,CAACN,KAAK,CAACI,CAAC,CAAC,CAAC;EAC3C;EACA,OAAOG,MAAM,CAACC,IAAI,CAACT,MAAM,CAAC;AAC9B,CAAC;AAED,MAAMU,YAAY,GAAG,CAAC,MAAM;EACxB,IAAIC,eAAe,GAAG,CAAC;EACvB,IAAIC,aAAa,GAAG,EAAE;EAEtB,OAAQC,KAAK,IAAK;IACd,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC9B,MAAMC,eAAe,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;IAE7C;IACA,IAAIH,WAAW,GAAGH,eAAe,IAAIM,eAAe,IAAI,CAACL,aAAa,CAACM,MAAM,EAAE;MAC3E;MACA,KAAK,IAAIb,CAAC,GAAGQ,KAAK,CAACK,MAAM,GAAG,CAAC,EAAEb,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QACvC,MAAMc,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIjB,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,CAACQ,KAAK,CAACR,CAAC,CAAC,EAAEQ,KAAK,CAACM,CAAC,CAAC,CAAC,GAAG,CAACN,KAAK,CAACM,CAAC,CAAC,EAAEN,KAAK,CAACR,CAAC,CAAC,CAAC;MAC/C;MACA;MACAM,eAAe,GAAGG,WAAW;MAC7BF,aAAa,GAAG,CAAC,GAAGC,KAAK,CAAC;IAC9B;IAEA,OAAOD,aAAa;EACxB,CAAC;AACL,CAAC,EAAE,CAAC;AAEJ,MAAMW,WAAW,GAAGA,CAAC;EAAEC,YAAY;EAAEC,YAAY;EAAEC,WAAW;EAAEC,YAAY;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC3F,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC2C,cAAc,EAAEC,iBAAiB,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC6C,YAAY,EAAEC,eAAe,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC+C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACiD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACZ,MAAMoD,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMnD,KAAK,CAACoD,GAAG,CAAC,oCAAoC,CAAC;QACtEC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;;QAE7C,MAAMC,qBAAqB,GAAGL,QAAQ,CAACI,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAK;UACtD,IAAIA,IAAI,CAACC,SAAS,IAAID,IAAI,CAACC,SAAS,CAACJ,IAAI,EAAE;YACvC,MAAMK,YAAY,GAAGtD,mBAAmB,CAACoD,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;YAC7DF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEI,IAAI,CAACG,IAAI,EAAED,YAAY,CAAC,CAAC,CAAC;YACjE,OAAO;cAAE,GAAGF,IAAI;cAAEC,SAAS,EAAG,0BAAyBC,YAAa;YAAE,CAAC;UAC3E,CAAC,MAAM;YACHP,OAAO,CAACS,KAAK,CAAC,8BAA8B,EAAEJ,IAAI,CAAC;YACnD,OAAO;cAAE,GAAGA,IAAI;cAAEC,SAAS,EAAE;YAAG,CAAC,CAAC,CAAC;UACvC;QACJ,CAAC,CAAC;QACFpB,WAAW,CAACrB,YAAY,CAACsC,qBAAqB,CAAC,CAAC;MACpD,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZT,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMZ,QAAQ,GAAG,MAAMnD,KAAK,CAACoD,GAAG,CAAC,sCAAsC,CAAC;QACxE,MAAMY,aAAa,GAAGb,QAAQ,CAACI,IAAI,CAACU,MAAM,CAAC,CAACC,GAAG,EAAER,IAAI,KAAK;UACtDQ,GAAG,CAACR,IAAI,CAACS,EAAE,CAAC,GAAG,IAAI;UACnB,OAAOD,GAAG;QACd,CAAC,EAAE,CAAC,CAAC,CAAC;QACNvB,iBAAiB,CAACqB,aAAa,CAAC;MACpC,CAAC,CAAC,OAAOF,KAAK,EAAE;QACZT,OAAO,CAACS,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC;IAEDZ,UAAU,CAAC,CAAC;IACZa,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAENjE,SAAS,CAAC,MAAM;IACZ,IAAImC,YAAY,EAAE;MACdc,mBAAmB,CAACd,YAAY,CAAC0B,SAAS,CAAC;MAC3CV,mBAAmB,CAAChB,YAAY,CAAC4B,IAAI,CAAC;IAC1C,CAAC,MAAM;MACHd,mBAAmB,CAAC,IAAI,CAAC;MACzBE,mBAAmB,CAAC,EAAE,CAAC;IAC3B;EACJ,CAAC,EAAE,CAAChB,YAAY,CAAC,CAAC;EAElB,MAAMmC,UAAU,GAAG,CAAClC,WAAW,GAAG,CAAC,IAAIC,YAAY;EACnD,IAAIkC,cAAc,GAAGjC,UAAU,GAAGE,QAAQ,GAAGA,QAAQ,CAACgC,MAAM,CAACZ,IAAI,IAAIhB,cAAc,CAACgB,IAAI,CAACS,EAAE,CAAC,CAAC;EAC7F;;EAEA,MAAMI,cAAc,GAAG,MAAOC,MAAM,IAAK;IACrC,IAAI;MACA;MACA,IAAI9B,cAAc,CAAC8B,MAAM,CAAC,EAAE;QACxB,MAAMxE,KAAK,CAACyE,IAAI,CAAC,kCAAkC,EAAE;UAAED;QAAO,CAAC,CAAC;QAChE7B,iBAAiB,CAAE+B,UAAU,KAAM;UAC/B,GAAGA,UAAU;UACb,CAACF,MAAM,GAAG,KAAK,CAAE;QACrB,CAAC,CAAC,CAAC;MACP,CAAC,MAAM;QACH;QACA,MAAMxE,KAAK,CAACyE,IAAI,CAAC,gCAAgC,EAAE;UAAED;QAAO,CAAC,CAAC;QAC9D7B,iBAAiB,CAAE+B,UAAU,KAAM;UAC/B,GAAGA,UAAU;UACb,CAACF,MAAM,GAAG,IAAI,CAAE;QACpB,CAAC,CAAC,CAAC;MACP;IACJ,CAAC,CAAC,OAAOV,KAAK,EAAE;MACZ,IAAIA,KAAK,CAACX,QAAQ,IAAIW,KAAK,CAACX,QAAQ,CAACwB,MAAM,KAAK,GAAG,EAAE;QACjD9B,eAAe,CAAC,0CAA0C,CAAC;QAC3D+B,UAAU,CAAC,MAAM;UACb/B,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,MAAM;QACHQ,OAAO,CAACS,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC/D;IACJ;EACJ,CAAC;EAED,oBACIzD,OAAA;IAAKwE,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAE,CAAE;IAAAC,QAAA,GACrEnC,gBAAgB,iBACbzC,OAAA;MAAKwE,KAAK,EAAE;QAAEK,QAAQ,EAAE,OAAO;QAAEC,GAAG,EAAE,OAAO;QAAEC,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAE,kBAAkB;QAAEC,eAAe,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE,MAAM;QAAEC,aAAa,EAAE,MAAM;QAAEC,KAAK,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAV,QAAA,gBACtN5E,OAAA;QAAKuF,GAAG,EAAE9C,gBAAiB;QAAC+C,GAAG,EAAE7C,gBAAiB;QAAC6B,KAAK,EAAE;UAAEa,KAAK,EAAE,OAAO;UAAEI,MAAM,EAAE,OAAO;UAAEN,YAAY,EAAE;QAAO;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvH7F,OAAA;QAAIwE,KAAK,EAAE;UAAEsB,SAAS,EAAE,QAAQ;UAAEC,UAAU,EAAE,MAAM;UAAEC,KAAK,EAAE,OAAO;UAAEC,QAAQ,EAAE,MAAM;UAAEX,QAAQ,EAAE,QAAQ;UAAEY,YAAY,EAAE,UAAU;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAvB,QAAA,EAAEjC;MAAgB;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpL,CACR,eACG7F,OAAA;MAAKwE,KAAK,EAAE;QACRC,OAAO,EAAE,MAAM;QACf2B,QAAQ,EAAE,MAAM;QAChBC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE1E,YAAY,GAAG,OAAO,GAAG,GAAG;QACxC2E,UAAU,EAAE;MAChB,CAAE;MAAA3B,QAAA,EACGZ,cAAc,CAACwC,KAAK,CAACzC,UAAU,EAAEA,UAAU,GAAGjC,YAAY,CAAC,CAACsB,GAAG,CAAEC,IAAI,iBAClErD,OAAA;QAEIwE,KAAK,EAAE;UAAEa,KAAK,EAAE,OAAO;UAAEoB,MAAM,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAU,CAAE;QAC7DC,OAAO,EAAEA,CAAA,KAAMhF,YAAY,CAAC0B,IAAI,CAAE;QAAAuB,QAAA,GAEjCvB,IAAI,CAACC,SAAS,gBACXtD,OAAA;UAAKuF,GAAG,EAAElC,IAAI,CAACC,SAAU;UAACkC,GAAG,EAAEnC,IAAI,CAACG,IAAK;UAACgB,KAAK,EAAE;YAC7Ca,KAAK,EAAE,OAAO;YACdI,MAAM,EAAE,OAAO;YACfmB,SAAS,EAAE,OAAO;YAClBzB,YAAY,EAAE;UAClB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEL7F,OAAA;UAAKwE,KAAK,EAAE;YACRa,KAAK,EAAE,OAAO;YACdI,MAAM,EAAE,OAAO;YACfR,eAAe,EAAE,OAAO;YACxBe,KAAK,EAAE,OAAO;YACdvB,OAAO,EAAE,MAAM;YACfoC,UAAU,EAAE,QAAQ;YACpBR,cAAc,EAAE,QAAQ;YACxBlB,YAAY,EAAE;UAClB,CAAE;UAAAP,QAAA,EAAC;QAEH;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACR,eACD7F,OAAA;UAAIwE,KAAK,EAAE;YACPyB,QAAQ,EAAE,MAAM;YAChBH,SAAS,EAAE,QAAQ;YACnBK,UAAU,EAAE,QAAQ;YACpBb,QAAQ,EAAE,QAAQ;YAClBY,YAAY,EAAE,UAAU;YACxBY,SAAS,EAAE,KAAK;YAChBC,MAAM,EAAE,gBAAgB;YACxB7B,OAAO,EAAE,KAAK;YACdC,YAAY,EAAE,KAAK;YACnBa,KAAK,EAAE;UACX,CAAE;UAAApB,QAAA,EACGvB,IAAI,CAACG;QAAI;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACL7F,OAAA;UACI2G,OAAO,EAAGK,CAAC,IAAK;YACZA,CAAC,CAACC,eAAe,CAAC,CAAC;YACnB/C,cAAc,CAACb,IAAI,CAACS,EAAE,CAAC;UAC3B,CAAE;UACFoD,YAAY,EAAEA,CAAA,KAAM9E,gBAAgB,CAACiB,IAAI,CAACS,EAAE,CAAE;UAC9CqD,YAAY,EAAEA,CAAA,KAAM/E,gBAAgB,CAAC,IAAI,CAAE;UAC3CoC,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAE4B,cAAc,EAAE,QAAQ;YAAEQ,UAAU,EAAE,QAAQ;YAAEH,MAAM,EAAE;UAAU,CAAE;UAAA9B,QAAA,EAE7FvC,cAAc,CAACgB,IAAI,CAACS,EAAE,CAAC,gBACpB9D,OAAA,CAACF,kBAAkB;YAACsH,SAAS,EAAC,UAAU;YAACpB,KAAK,EAAC;UAAO;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,GACzD1D,aAAa,KAAKkB,IAAI,CAACS,EAAE,gBACzB9D,OAAA,CAACH,OAAO;YAACuH,SAAS,EAAC,UAAU;YAACpB,KAAK,EAAC;UAAO;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAE9C7F,OAAA,CAACJ,UAAU;YAACwH,SAAS,EAAC,UAAU;YAACpB,KAAK,EAAC;UAAO;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACnD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GAvDDxC,IAAI,CAACS,EAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwDX,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACLtD,YAAY,iBACTvC,OAAA;MAAKwE,KAAK,EAAE;QACRK,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,MAAM;QACXC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,kBAAkB;QAC7BC,eAAe,EAAE,KAAK;QACtBe,KAAK,EAAE,OAAO;QACdd,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,KAAK;QACnBkC,MAAM,EAAE;MACZ,CAAE;MAAAzC,QAAA,EACGrC;IAAY;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7D,EAAA,CAvLIN,WAAW;AAAA4F,EAAA,GAAX5F,WAAW;AAyLjB,eAAeA,WAAW;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}