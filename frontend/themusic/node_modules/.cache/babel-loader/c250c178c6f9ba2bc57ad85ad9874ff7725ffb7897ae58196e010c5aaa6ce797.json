{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{FaRegHeart,FaHeart}from'react-icons/fa';import{FaHeartCircleCheck}from'react-icons/fa6';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const arrayBufferToBase64=buffer=>{let binary='';const bytes=new Uint8Array(buffer);const len=bytes.byteLength;for(let i=0;i<len;i++){binary+=String.fromCharCode(bytes[i]);}return window.btoa(binary);};const shuffleArray=(()=>{let lastShuffleTime=0;let shuffledArray=[];return array=>{const currentTime=Date.now();const twentyFourHours=24*60*60*1000;// 24 hours in milliseconds\n// Check if 24 hours have passed since the last shuffle\nif(currentTime-lastShuffleTime>=twentyFourHours||!shuffledArray.length){// Shuffle the array\nfor(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]];}// Update the last shuffle time and shuffled array\nlastShuffleTime=currentTime;shuffledArray=[...array];}return shuffledArray;};})();const SongDisplay=_ref=>{let{onSongSelect,selectedSong,currentPage,songsPerPage,displayAll}=_ref;const[allSongs,setAllSongs]=useState([]);const[hoveredSongId,setHoveredSongId]=useState(null);const[favoriteStatus,setFavoriteStatus]=useState({});const[errorMessage,setErrorMessage]=useState('');const[currentSongImage,setCurrentSongImage]=useState(null);const[currentSongTitle,setCurrentSongTitle]=useState('');useEffect(()=>{const fetchSongs=async()=>{try{const response=await axios.get('http://localhost:8081/audio_tracks');console.log('API Response:',response.data);// Log the API response\nconst songsWithBase64Images=response.data.map(song=>{if(song.cover_art&&song.cover_art.data){const base64String=arrayBufferToBase64(song.cover_art.data);console.log('Base64 String for song:',song.name,base64String);// Log the base64 string\nreturn{...song,cover_art:\"data:image/jpeg;base64,\".concat(base64String)};}else{console.error('Invalid cover data for song:',song);return{...song,cover_art:''};// Handle missing cover data\n}});setAllSongs(shuffleArray(songsWithBase64Images));}catch(error){console.error('Error fetching data:',error);}};const fetchFavoriteSongs=async()=>{try{const response=await axios.get('http://localhost:8081/favorite_songs');const favoriteSongs=response.data.reduce((acc,song)=>{acc[song.id]=true;return acc;},{});setFavoriteStatus(favoriteSongs);}catch(error){console.error('Error fetching favorite songs:',error);}};fetchSongs();fetchFavoriteSongs();},[]);useEffect(()=>{if(selectedSong){setCurrentSongImage(selectedSong.cover_art);setCurrentSongTitle(selectedSong.name);}else{setCurrentSongImage(null);setCurrentSongTitle('');}},[selectedSong]);const startIndex=(currentPage-1)*songsPerPage;let songsToDisplay=displayAll?allSongs:allSongs.filter(song=>favoriteStatus[song.id]);// const currentSongs = songsToDisplay.slice(startIndex, startIndex + songsPerPage);\nconst handleFavorite=async songId=>{try{// If the song is already favorited, unfavorite it\nif(favoriteStatus[songId]){await axios.post('http://localhost:8081/unfavorite',{songId});setFavoriteStatus(prevStatus=>({...prevStatus,[songId]:false// Set the favorite status to false\n}));}else{// Otherwise, favorite the song\nawait axios.post('http://localhost:8081/favorite',{songId});setFavoriteStatus(prevStatus=>({...prevStatus,[songId]:true// Set the favorite status to true\n}));}}catch(error){if(error.response&&error.response.status===401){setErrorMessage('You must be logged in to favourite songs');setTimeout(()=>{setErrorMessage('');// Clear error message after 1 second\n},2000);}else{console.error('Error favoriting/unfavoriting song:',error);}}};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',flexGrow:1},children:[currentSongImage&&/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:'400px',left:'185px',transform:'translateX(-50%)',backgroundColor:'white',padding:'10px',borderRadius:'10px',paddingBottom:'50px',width:'330px',overflow:'hidden'},children:[/*#__PURE__*/_jsx(\"img\",{src:currentSongImage,alt:currentSongTitle,style:{width:'330px',height:'330px',borderRadius:'10px'}}),/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:'center',paddingTop:'20px',color:'black',fontSize:'22px',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap'},children:currentSongTitle})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexWrap:'wrap',justifyContent:'center',marginLeft:selectedSong?'370px':'0',transition:'margin-left 1.5s'},children:songsToDisplay.slice(startIndex,startIndex+songsPerPage).map(song=>/*#__PURE__*/_jsxs(\"div\",{style:{width:'150px',margin:'10px',cursor:'pointer'},onClick:()=>onSongSelect(song),children:[song.cover_art?/*#__PURE__*/_jsx(\"img\",{src:song.cover_art,alt:song.name,style:{width:'150px',height:'150px',objectFit:'cover',borderRadius:'10px'}}):/*#__PURE__*/_jsx(\"div\",{style:{width:'150px',height:'150px',backgroundColor:'black',color:'white',display:'flex',alignItems:'center',justifyContent:'center',borderRadius:'10px'},children:\"No Image\"}),/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:'16px',textAlign:'center',whiteSpace:'nowrap',overflow:'hidden',textOverflow:'ellipsis',marginTop:'5px',border:'0px solid #ddd',padding:'5px',borderRadius:'5px',color:'white'},children:song.name}),/*#__PURE__*/_jsx(\"div\",{onClick:e=>{e.stopPropagation();handleFavorite(song.id);},onMouseEnter:()=>setHoveredSongId(song.id),onMouseLeave:()=>setHoveredSongId(null),style:{display:'flex',justifyContent:'center',alignItems:'center',cursor:'pointer'},children:favoriteStatus[song.id]?/*#__PURE__*/_jsx(FaHeartCircleCheck,{className:\"w-20 h-8\",color:\"white\"}):hoveredSongId===song.id?/*#__PURE__*/_jsx(FaHeart,{className:\"w-20 h-8\",color:\"white\"}):/*#__PURE__*/_jsx(FaRegHeart,{className:\"w-20 h-8\",color:\"white\"})})]},song.id))}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:'30px',left:'50%',transform:'translateX(-50%)',backgroundColor:'red',color:'white',padding:'10px 20px',borderRadius:'5px',zIndex:1000},children:errorMessage})]});};export default SongDisplay;","map":{"version":3,"names":["React","useEffect","useState","axios","FaRegHeart","FaHeart","FaHeartCircleCheck","jsx","_jsx","jsxs","_jsxs","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","shuffleArray","lastShuffleTime","shuffledArray","array","currentTime","Date","now","twentyFourHours","length","j","Math","floor","random","SongDisplay","_ref","onSongSelect","selectedSong","currentPage","songsPerPage","displayAll","allSongs","setAllSongs","hoveredSongId","setHoveredSongId","favoriteStatus","setFavoriteStatus","errorMessage","setErrorMessage","currentSongImage","setCurrentSongImage","currentSongTitle","setCurrentSongTitle","fetchSongs","response","get","console","log","data","songsWithBase64Images","map","song","cover_art","base64String","name","concat","error","fetchFavoriteSongs","favoriteSongs","reduce","acc","id","startIndex","songsToDisplay","filter","handleFavorite","songId","post","prevStatus","status","setTimeout","style","display","flexDirection","flexGrow","children","position","top","left","transform","backgroundColor","padding","borderRadius","paddingBottom","width","overflow","src","alt","height","textAlign","paddingTop","color","fontSize","textOverflow","whiteSpace","flexWrap","justifyContent","marginLeft","transition","slice","margin","cursor","onClick","objectFit","alignItems","marginTop","border","e","stopPropagation","onMouseEnter","onMouseLeave","className","zIndex"],"sources":["D:/Desktop/samplerfinal/frontend/themusic/src/components/SongDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FaRegHeart, FaHeart } from 'react-icons/fa';\nimport { FaHeartCircleCheck } from 'react-icons/fa6';\n\nconst arrayBufferToBase64 = (buffer) => {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n};\n\nconst shuffleArray = (() => {\n    let lastShuffleTime = 0;\n    let shuffledArray = [];\n\n    return (array) => {\n        const currentTime = Date.now();\n        const twentyFourHours = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\n\n        // Check if 24 hours have passed since the last shuffle\n        if (currentTime - lastShuffleTime >= twentyFourHours || !shuffledArray.length) {\n            // Shuffle the array\n            for (let i = array.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [array[i], array[j]] = [array[j], array[i]];\n            }\n            // Update the last shuffle time and shuffled array\n            lastShuffleTime = currentTime;\n            shuffledArray = [...array];\n        }\n\n        return shuffledArray;\n    };\n})();\n\nconst SongDisplay = ({ onSongSelect, selectedSong, currentPage, songsPerPage, displayAll }) => {\n    const [allSongs, setAllSongs] = useState([]);\n    const [hoveredSongId, setHoveredSongId] = useState(null);\n    const [favoriteStatus, setFavoriteStatus] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const [currentSongImage, setCurrentSongImage] = useState(null);\n    const [currentSongTitle, setCurrentSongTitle] = useState('');\n\n    useEffect(() => {\n        const fetchSongs = async () => {\n            try {\n                const response = await axios.get('http://localhost:8081/audio_tracks');\n                console.log('API Response:', response.data); // Log the API response\n\n                const songsWithBase64Images = response.data.map((song) => {\n                    if (song.cover_art && song.cover_art.data) {\n                        const base64String = arrayBufferToBase64(song.cover_art.data);\n                        console.log('Base64 String for song:', song.name, base64String); // Log the base64 string\n                        return { ...song, cover_art: `data:image/jpeg;base64,${base64String}` };\n                    } else {\n                        console.error('Invalid cover data for song:', song);\n                        return { ...song, cover_art: '' }; // Handle missing cover data\n                    }\n                });\n                setAllSongs(shuffleArray(songsWithBase64Images));\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        const fetchFavoriteSongs = async () => {\n            try {\n                const response = await axios.get('http://localhost:8081/favorite_songs');\n                const favoriteSongs = response.data.reduce((acc, song) => {\n                    acc[song.id] = true;\n                    return acc;\n                }, {});\n                setFavoriteStatus(favoriteSongs);\n            } catch (error) {\n                console.error('Error fetching favorite songs:', error);\n            }\n        };\n\n        fetchSongs();\n        fetchFavoriteSongs();\n    }, []);\n\n    useEffect(() => {\n        if (selectedSong) {\n            setCurrentSongImage(selectedSong.cover_art);\n            setCurrentSongTitle(selectedSong.name);\n        } else {\n            setCurrentSongImage(null);\n            setCurrentSongTitle('');\n        }\n    }, [selectedSong]);\n\n    const startIndex = (currentPage - 1) * songsPerPage;\n    let songsToDisplay = displayAll ? allSongs : allSongs.filter(song => favoriteStatus[song.id]);\n    // const currentSongs = songsToDisplay.slice(startIndex, startIndex + songsPerPage);\n\n    const handleFavorite = async (songId) => {\n        try {\n            // If the song is already favorited, unfavorite it\n            if (favoriteStatus[songId]) {\n                await axios.post('http://localhost:8081/unfavorite', { songId });\n                setFavoriteStatus((prevStatus) => ({\n                    ...prevStatus,\n                    [songId]: false, // Set the favorite status to false\n                }));\n            } else {\n                // Otherwise, favorite the song\n                await axios.post('http://localhost:8081/favorite', { songId });\n                setFavoriteStatus((prevStatus) => ({\n                    ...prevStatus,\n                    [songId]: true, // Set the favorite status to true\n                }));\n            }\n        } catch (error) {\n            if (error.response && error.response.status === 401) {\n                setErrorMessage('You must be logged in to favourite songs');\n                setTimeout(() => {\n                    setErrorMessage(''); // Clear error message after 1 second\n                }, 2000);\n            } else {\n                console.error('Error favoriting/unfavoriting song:', error);\n            }\n        }\n    };\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n        {currentSongImage && (\n            <div style={{ position: 'fixed', top: '400px', left: '185px', transform: 'translateX(-50%)', backgroundColor: 'white', padding: '10px', borderRadius: '10px', paddingBottom: '50px', width: '330px', overflow: 'hidden' }}>\n                <img src={currentSongImage} alt={currentSongTitle} style={{ width: '330px', height: '330px', borderRadius: '10px',}} />\n                <h3 style={{ textAlign: 'center', paddingTop: '20px', color: 'black', fontSize: '22px', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{currentSongTitle}</h3>\n            </div>\n        )}\n            <div style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'center',\n                marginLeft: selectedSong ? '370px' : '0',\n                transition: 'margin-left 1.5s'\n            }}>\n                {songsToDisplay.slice(startIndex, startIndex + songsPerPage).map((song) => (\n                    <div\n                        key={song.id}\n                        style={{ width: '150px', margin: '10px', cursor: 'pointer' }}\n                        onClick={() => onSongSelect(song)}\n                    >\n                        {song.cover_art ? (\n                            <img src={song.cover_art} alt={song.name} style={{\n                                width: '150px',\n                                height: '150px',\n                                objectFit: 'cover',\n                                borderRadius: '10px'\n                            }} />\n                        ) : (\n                            <div style={{\n                                width: '150px',\n                                height: '150px',\n                                backgroundColor: 'black',\n                                color: 'white',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                borderRadius: '10px'\n                            }}>\n                                No Image\n                            </div>\n                        )}\n                        <h2 style={{\n                            fontSize: '16px',\n                            textAlign: 'center',\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            marginTop: '5px',\n                            border: '0px solid #ddd',\n                            padding: '5px',\n                            borderRadius: '5px',\n                            color: 'white'\n                        }}>\n                            {song.name}\n                        </h2>\n                        <div\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                handleFavorite(song.id);\n                            }}\n                            onMouseEnter={() => setHoveredSongId(song.id)}\n                            onMouseLeave={() => setHoveredSongId(null)}\n                            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}\n                        >\n                            {favoriteStatus[song.id] ? (\n                                <FaHeartCircleCheck className='w-20 h-8' color='white' />\n                            ) : hoveredSongId === song.id ? (\n                                <FaHeart className='w-20 h-8' color='white' />\n                            ) : (\n                                <FaRegHeart className='w-20 h-8' color='white' />\n                            )}\n                        </div>\n                    </div>\n                ))}\n            </div>\n            {errorMessage && (\n                <div style={{\n                    position: 'fixed',\n                    top: '30px',\n                    left: '50%',\n                    transform: 'translateX(-50%)',\n                    backgroundColor: 'red',\n                    color: 'white',\n                    padding: '10px 20px',\n                    borderRadius: '5px',\n                    zIndex: 1000\n                }}>\n                    {errorMessage}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SongDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}