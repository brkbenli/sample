{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import Navbar from\"../components/Navbar\";import Pagination from'../components/Pagination';import SongDisplay from'../components/SongDisplay';import SongPlayer from'../components/SongPlayer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const arrayBufferToBase64=buffer=>{let binary='';const bytes=new Uint8Array(buffer);const len=bytes.byteLength;for(let i=0;i<len;i++){binary+=String.fromCharCode(bytes[i]);}return window.btoa(binary);};const Favourites=()=>{const[favoriteSongs,setFavoriteSongs]=useState([]);const[currentPage,setCurrentPage]=useState(1);const itemsPerPage=44;const[selectedSong,setSelectedSong]=useState(null);const handleSongSelect=song=>{setSelectedSong(song);};useEffect(()=>{const fetchFavoriteSongs=async()=>{try{const response=await axios.get('http://localhost:8081/favorite_songs');const songsWithBase64Images=response.data.map(song=>{if(song.cover_art&&song.cover_art.data){const base64String=arrayBufferToBase64(song.cover_art.data);return{...song,cover_art:\"data:image/jpeg;base64,\".concat(base64String)};}else{return{...song,cover_art:''};}});setFavoriteSongs(songsWithBase64Images);}catch(error){console.error('Error fetching favorite songs:',error);}};fetchFavoriteSongs();},[]);const handlePageChange=page=>{setCurrentPage(page);};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',minHeight:'100vh'},children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-white\",style:{display:'flex',justifyContent:'center',fontFamily:'Proxima Nova'},children:\"Your Favorites\"}),favoriteSongs.length===0?/*#__PURE__*/_jsx(\"div\",{style:{height:'100vh',display:'flex',alignItems:'center',justifyContent:'center',backgroundColor:'transparent',color:'white',fontFamily:'Proxima Nova',textAlign:'center'},children:/*#__PURE__*/_jsx(\"h2\",{children:\"You Currently Have No Favourites\"})}):/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexGrow:1},children:[/*#__PURE__*/_jsx(SongDisplay,{onSongSelect:handleSongSelect,selectedSong:selectedSong,currentPage:currentPage,songsPerPage:itemsPerPage,displayAll:false}),/*#__PURE__*/_jsx(SongPlayer,{song:selectedSong})]}),favoriteSongs.length>itemsPerPage&&/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,totalItems:favoriteSongs.length,itemsPerPage:itemsPerPage,onPageChange:handlePageChange})]});};export default Favourites;","map":{"version":3,"names":["React","useEffect","useState","axios","Navbar","Pagination","SongDisplay","SongPlayer","jsx","_jsx","jsxs","_jsxs","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","Favourites","favoriteSongs","setFavoriteSongs","currentPage","setCurrentPage","itemsPerPage","selectedSong","setSelectedSong","handleSongSelect","song","fetchFavoriteSongs","response","get","songsWithBase64Images","data","map","cover_art","base64String","concat","error","console","handlePageChange","page","style","display","flexDirection","minHeight","children","className","justifyContent","fontFamily","length","height","alignItems","backgroundColor","color","textAlign","flexGrow","onSongSelect","songsPerPage","displayAll","totalItems","onPageChange"],"sources":["D:/Desktop/samplerfinal/frontend/themusic/src/pages/favourites.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navbar from \"../components/Navbar\";\nimport Pagination from '../components/Pagination';\nimport SongDisplay from '../components/SongDisplay';\nimport SongPlayer from '../components/SongPlayer';\n\n\nconst arrayBufferToBase64 = (buffer) => {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n};\n\nconst Favourites = () => {\n    const [favoriteSongs, setFavoriteSongs] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 44;\n    const [selectedSong, setSelectedSong] = useState(null)\n\n    const handleSongSelect = (song) => {\n        setSelectedSong(song);\n    };\n\n    useEffect(() => {\n        const fetchFavoriteSongs = async () => {\n            try {\n                const response = await axios.get('http://localhost:8081/favorite_songs');\n                const songsWithBase64Images = response.data.map((song) => {\n                    if (song.cover_art && song.cover_art.data) {\n                        const base64String = arrayBufferToBase64(song.cover_art.data);\n                        return { ...song, cover_art: `data:image/jpeg;base64,${base64String}` };\n                    } else {\n                        return { ...song, cover_art: '' };\n                    }\n                });\n                setFavoriteSongs(songsWithBase64Images);\n            } catch (error) {\n                console.error('Error fetching favorite songs:', error);\n            }\n        };\n\n        fetchFavoriteSongs();\n    }, []);\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n            <Navbar />\n            <h1 className='text-white' style={{ display: 'flex', justifyContent: 'center', fontFamily: 'Proxima Nova' }}>\n                Your Favorites\n            </h1>\n            {favoriteSongs.length === 0 ? (\n                <div style={{\n                    height: '100vh',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: 'transparent',\n                    color: 'white',\n                    fontFamily: 'Proxima Nova',\n                    textAlign: 'center',\n                }}>\n                    <h2>You Currently Have No Favourites</h2>\n                </div>\n            ) : (\n                <div style={{ display: 'flex', flexGrow: 1 }}>\n                    <SongDisplay \n                        onSongSelect={handleSongSelect} \n                        selectedSong={selectedSong} \n                        currentPage={currentPage} \n                        songsPerPage={itemsPerPage} \n                        displayAll={false}\n                    />\n                    <SongPlayer song={selectedSong} />\n                </div>\n            )}\n            {favoriteSongs.length > itemsPerPage && (\n                <Pagination\n                    currentPage={currentPage}\n                    totalItems={favoriteSongs.length}\n                    itemsPerPage={itemsPerPage}\n                    onPageChange={handlePageChange}\n                />\n            )}\n        </div>\n    );}\nexport default Favourites;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}